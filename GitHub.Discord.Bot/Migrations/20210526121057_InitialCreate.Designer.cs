// <auto-generated />
using System;
using GitHub.Discord.Bot.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GitHub.Discord.Bot.Migrations
{
    [DbContext(typeof(BotContext))]
    [Migration("20210526121057_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.6");

            modelBuilder.Entity("GitHub.Discord.Bot.Data.Model.IssueReference", b =>
                {
                    b.Property<long>("IssueReferenceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("ISSUE_REFERENCE_NR");

                    b.Property<DateTimeOffset>("EvtUpdated")
                        .HasColumnType("TEXT")
                        .HasColumnName("EVT_UPDATED");

                    b.Property<string>("GitHubIssueHtmlUrl")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("GH_ISSUE_HTML_URL");

                    b.Property<int>("GitHubIssueNr")
                        .HasColumnType("INTEGER")
                        .HasColumnName("GH_ISSUE_NR");

                    b.Property<long>("GitHubRepositoryId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("GH_REPOSITORY_ID");

                    b.Property<ulong>("GuildId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("DSC_GUILD_ID");

                    b.Property<ulong>("MessageId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("DSC_MESSAGE_ID");

                    b.Property<ulong>("TextChannelId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("DSC_TEXT_CHANNEL_ID");

                    b.HasKey("IssueReferenceId");

                    b.ToTable("GDB_ISSUE_REFERENCE");
                });

            modelBuilder.Entity("GitHub.Discord.Bot.Data.Model.OptIn", b =>
                {
                    b.Property<long>("OptInId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("OPT_IN_NR");

                    b.Property<DateTime>("EvtCreated")
                        .HasColumnType("TEXT")
                        .HasColumnName("EVT_CREATED");

                    b.Property<int>("OptInStatus")
                        .HasColumnType("INTEGER")
                        .HasColumnName("OPT_IN_STATUS");

                    b.Property<long>("UserId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("USER_NR");

                    b.HasKey("OptInId");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("GDB_OPT_IN");
                });

            modelBuilder.Entity("GitHub.Discord.Bot.Data.Model.User", b =>
                {
                    b.Property<long>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("USER_NR");

                    b.Property<string>("DiscordUserName")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("DISCORD_USER_NAME")
                        .HasComment("The discord username with discriminator, e.g. My_Name#1234");

                    b.Property<long>("DiscordUserNr")
                        .HasColumnType("INTEGER")
                        .HasColumnName("DISCORD_USER_NR");

                    b.HasKey("UserId");

                    b.ToTable("GDB_USER");
                });

            modelBuilder.Entity("GitHub.Discord.Bot.Data.Model.OptIn", b =>
                {
                    b.HasOne("GitHub.Discord.Bot.Data.Model.User", "User")
                        .WithOne("OptIn")
                        .HasForeignKey("GitHub.Discord.Bot.Data.Model.OptIn", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("GitHub.Discord.Bot.Data.Model.User", b =>
                {
                    b.Navigation("OptIn");
                });
#pragma warning restore 612, 618
        }
    }
}
